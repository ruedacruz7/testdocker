# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
variables:  
  trivyVersion: 0.21.0
  IMAGE: "ruedacruz7/testtrivy/tree/master"

trigger:  
- main

pool:  
  vmImage: 'ubuntu-latest'

steps:

- task: CmdLine@2
  displayName: Scan
  inputs:
    script: |
      docker run -u 0 --rm -v /var/run/docker.sock:/var/run/docker.sock -v $PWD:/app --rm aquasec/trivy image --severity HIGH,CRITICAL --no-progress --format template --template "@contrib/junit.tpl" -o /app/junit-report.xml ${IMAGE}
      cp junit-report.xml $(Build.ArtifactStagingDirectory)/junit-report.xml

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

#Publicación de los resultados del análisis
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/junit-*.xml'
    mergeTestResults: true
    failTaskOnFailedTests: true
    testRunTitle: 'Trivy'
  condition: 'always()'
